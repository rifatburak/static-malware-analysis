from tkinter import *
from tkinter import filedialog
import hashlib
import requests
import os

# Return file Sha256 
def find_hash(file_path):
    
    with open(file_path,"rb") as f:
        bytes = f.read() # read entire file as bytes
        readable_hash = hashlib.sha256(bytes).hexdigest();
        
    return readable_hash;


# Get information (JSON file) from VirusTotal.
def get_file_json(sha256_hash, api_key):
    url = f"https://www.virustotal.com/api/v3/files/{sha256_hash}"

    headers = {
    "accept": "application/json",
    "x-apikey": api_key
    }

    response = requests.get(url, headers=headers)
    response = response.json()
    return response;

# Manipulate a JSON file and calculate a risk score.
def get_file_risk_score (sha256_hash, api_key):
    data = get_file_json(sha256_hash, api_key)
    analysis_stats = data['data']["attributes"]["last_analysis_stats"]
    mall = analysis_stats['malicious']
    susp = analysis_stats['suspicious']
    undd = analysis_stats['undetected']
    harml = analysis_stats['harmless'] 
    timeo = analysis_stats['timeout']
    conf = analysis_stats['confirmed-timeout']
    fail = analysis_stats['failure']
    typeun = analysis_stats['type-unsupported']
    total = 0
    for i in analysis_stats:
        total = total + analysis_stats[i]
    total = total - (typeun + fail + timeo ) 
    risk_score = mall + susp 
    return f'{risk_score}/{total}' ;

root = Tk()
root.title("Static Malware Analysis")

# Label and entry for file path
file_label = Label(root, text="File Path:")
file_label.pack()

file_entry = Entry(root, width=50)
file_entry.pack()

# Button to select file
def select_file():
    filename = filedialog.askopenfilename()
    file_entry.delete(0, END)
    file_entry.insert(0, filename)

select_file_button = Button(root, text="Select File", command=select_file)
select_file_button.pack()

# Label and entry for URL
url_label = Label(root, text="URL:")
url_label.pack()

url_entry = Entry(root, width=50)
url_entry.pack()
info_label = Label(root, text='')

# Display entered information
def show_info():
    file_path = file_entry.get()
    key = os.environ.get('API_Key')
    hash_sha256 = find_hash(file_path)
    risk_score = get_file_risk_score(hash_sha256, key)
    url = url_entry.get()
    message = f"File Risk Score: {risk_score}\nURL: {url}"
    info_label.config(text='')
    info_label.config(text=message)
    info_label.pack()

show_info_button = Button(root, text="Show Information", command=show_info)
show_info_button.pack()

root.mainloop()
